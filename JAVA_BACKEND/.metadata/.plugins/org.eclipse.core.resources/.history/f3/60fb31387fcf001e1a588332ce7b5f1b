package com.backend.safarnama.service;

import java.sql.SQLException;
import java.util.List;
import java.util.stream.Collectors;

import org.apache.tomcat.util.codec.binary.Base64;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.backend.safarnama.exception.PhotoRetrivalException;
import com.backend.safarnama.repository.PackageReository;
import com.backend.safarnama.repository.RoomRepository;
import com.backend.safarnama.response.PackageResposnse;
import com.backend.safarnama.response.RoomResponse;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;

@Service
@Transactional
@RequiredArgsConstructor
public class PackageServiceImpl implements IPackageService {
	
	@Autowired
	private final PackageReository packageReository;
	@Autowired
	private final ModelMapper mapper;

	@Override
	public List<PackageResposnse> getPackages() {
		List<PackageResposnse> response = packageReository.findAll().stream().map(r->{
			byte[] photoBytes = new byte[0];
			try {
				photoBytes=r.getPhoto().getBytes(1,(int) r.getPhoto().length());
			} catch (SQLException e) {
				throw new PhotoRetrivalException(e.getMessage());
			}    
			PackageResposnse packageResposnse= mapper.map(r,PackageResposnse.class);
			packageResposnse.setPhoto(Base64.encodeBase64String(photoBytes));
			return packageResposnse;
		}).collect(Collectors.toList());
		return response;
	}

}
